{"version":3,"sources":["components/BuyablePower.tsx","components/ManagePowersPanel.tsx","components/NavBar.jsx","App.tsx","index.js"],"names":["BuyablePower","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","purchased","_this2","react_default","a","createElement","name","majorCost","Button","color","variant","onClick","setState","minorCost","lesserCost","React","Component","ManagePowersPanel","selectedPowers","totalCP","remainingCP","tableColumns","tableRows","Dialog","aria-describedby","aria-labelledby","className","fullWidth","onClose","handleClose","open","DialogTitle","DialogActions","onSubmit","handleConfirm","FormControl","required","TextField","id","label","type","onChange","calculateRemainingCP","powerData","map","row","BuyablePower_BuyablePower","NavBar","_ref","toggleManagePowers","App","closePanels","showManagePowersPanel","updateSelectedPowers","fetch","then","r","text","csvToJson","_this3","components_NavBar","ManagePowersPanel_ManagePowersPanel","csv","lines","split","result","headers","i","length","obj","currentline","j","push","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.eb805a81.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Select,\n    Input\n} from '@material-ui/core';\n\n\ninterface IProps {\n    name: string;\n    majorCost: number;\n    minorCost: number;\n    lesserCost: number;\n}\n\ninterface IState {\n    purchased: number; //1-2-3 for lesser-minor-major. 0 is nothing\n}\n\nexport default class BuyablePower extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            purchased: 0\n        };\n    }\n    componentDidMount() {\n\n    }\n\n    render() {\n        if (this.state.purchased == 0) {\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                        {this.props.majorCost > 0 &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() =>\n                                    this.setState({\n                                        purchased: 3\n                                    })\n                                }> {this.props.majorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.minorCost > 0 &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() =>\n                                    this.setState({\n                                        purchased: 2\n                                    })\n                                }> {this.props.minorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.lesserCost > 0 &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() =>\n                                    this.setState({\n                                        purchased: 1\n                                    })\n                                }> {this.props.lesserCost} </Button>)}\n                    </td>\n                </tr>\n            )\n        } else {\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                    {this.state.purchased == 3 && (\n                       <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() =>\n                            this.setState({\n                                purchased: 0\n                            })\n                        }> X </Button>)}\n                    </td>\n                    <td>\n                    {this.state.purchased == 2 && (\n                       <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() =>\n                            this.setState({\n                                purchased: 0\n                            })\n                        }> X </Button>)}                        \n                    </td>\n                   <td>\n                       {this.state.purchased == 1 && (\n                       <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() =>\n                            this.setState({\n                                purchased: 0\n                            })\n                        }> X </Button>)}\n                        </td>\n                </tr>\n            )\n        }\n    }\n}","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input\n} from '@material-ui/core';\nimport BuyablePower from \"./BuyablePower\";\n\n\ninterface IProps {\n  powerData: any[];\n  selectedPowers: any[];\n  handleConfirm: (selectedPowers: any) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n  selectedPowers: any; //int array?\n  totalCP: number;\n  remainingCP: number;\n  tableColumns: any[];\n  tableRows: any[];\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedPowers: \"\",\n      totalCP: 0,\n      remainingCP: 0,\n      tableColumns: [],\n      tableRows: []\n    };\n  }\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <Dialog\n        aria-describedby=\"Manage Powers\"\n        aria-labelledby=\"Manage Powers\"\n        className=\"manage-powers-dialog\"\n        fullWidth={true}\n        onClose={this.props.handleClose}\n        open={true}\n      >\n        <DialogTitle>Manage Powers</DialogTitle>\n\n        <DialogActions>\n          <form onSubmit={(selectedPowers: any) => this.props.handleConfirm(this.state.selectedPowers)} >\n            <FormControl required variant=\"outlined\">\n              <TextField\n                id=\"total-cp-input\"\n                label=\"Total CP\"\n                type=\"number\"\n                onChange={() => this.calculateRemainingCP}\n                className=\"total-cp-input\"\n              />\n              Remaining CP: {this.state.remainingCP}\n\n\n              {/*\n                </FormControl>\n                <FormControl className=\"inputControl\">\n              */}\n              <table><th>Power</th><th>Major</th><th>Minor</th><th>Lesser</th>\n                {this.props.powerData && this.props.powerData.map((row: any[string]) => {\n                  if (row[\"Major\"] || row[\"Minor\"] || row[\"Lesser\"]) {\n                    return (\n                      <BuyablePower\n                        name={row[\"Power\"]}\n                        majorCost={row[\"Major\"]}\n                        minorCost={row[\"Minor\"]}\n                        lesserCost={row[\"Lesser\"]}\n                      />\n                    )\n                  }\n                })}\n              </table>\n\n            </FormControl>\n            <div className=\"actionButtons\">\n              <Button type=\"submit\">Save</Button>\n              <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n            </div>\n          </form>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  private calculateRemainingCP() {\n    this.setState({\n      remainingCP: this.state.totalCP\n    })\n  }\n\n}\n","import React from \"react\";\nimport { Button } from '@material-ui/core';\nimport ManagePowersPanel from \"./ManagePowersPanel\";\n\n// Stateless Functional Component\n\nconst NavBar = ({toggleManagePowers}) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"navbar-brand\">\n      <Button\n      color=\"primary\"\n      variant=\"contained\"\n      onClick={toggleManagePowers}> Manage Powers </Button>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport ManagePowersPanel from \"./components/ManagePowersPanel\";\nimport { flattenDiagnosticMessageText } from \"typescript\";\n\ninterface IState {\n  showManagePowersPanel: boolean\n  selectedPowers: any //number array?\n  powerData: any[]\n}\n\ninterface IProps {\n}\n\nexport default class App extends React.Component<IProps, IState> {\n  \n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n        showManagePowersPanel: false,\n        selectedPowers: \"\",\n        powerData: []\n    }\n\n  }\n\n  componentDidMount() {\n\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/powers.csv\")\n      .then((r) => r.text())\n       .then(text  => {\n         this.setState({\n          powerData: this.csvToJson(text)\n          });  \n        });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar \n          toggleManagePowers={\n            this.showManagePowersPanel\n          }\n        />\n        <main className=\"container\">\n{/*          <StatPanel />\n          <AbilityPanel />\n\n*/}\n        </main>\n        {this.state.showManagePowersPanel && \n        (<ManagePowersPanel\n          powerData={this.state.powerData}\n          selectedPowers={this.state.selectedPowers}\n          handleConfirm={(selectedPowers: any) =>\n            this.updateSelectedPowers(selectedPowers)\n          }\n          handleClose={() => this.closePanels()\n          }\n        /> )}\n      </div>\n    );\n  }\n\n  closePanels = () => {\n    this.setState({\n      showManagePowersPanel: false\n    })\n  }\n\n  updateSelectedPowers= (selectedPowers: any) => {\n\n  }\n\n  showManagePowersPanel = () => {\n    this.setState({\n      showManagePowersPanel: true\n    }\n    );\n  }\n\n  //var csv is the CSV file with headers\npublic csvToJson(csv: string){\n\n  var lines=csv.split(\"\\r\\n\");\n\n  var result = [];\n\n  //todo would be nice to support commas in data\n  //by skipping escaped commas\n  var headers=lines[0].split(\",\");\n\n  for(var i=1;i<lines.length;i++){\n\n\t  var obj: any = {};\n\t  var currentline=lines[i].split(\",\");\n\n\t  for(var j=0;j<headers.length;j++){\n\t\t  obj[headers[j]] = currentline[j];\n\t  }\n\n\t  result.push(obj);\n\n  }\n  \n  return result;\n  //return JSON.stringify(result); //JSON\n}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}