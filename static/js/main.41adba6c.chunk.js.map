{"version":3,"sources":["components/BuyablePower.tsx","components/ManagePowersPanel.tsx","components/NavBar.jsx","components/ManageArchPanel.tsx","components/InfoPanel.tsx","App.tsx","index.js"],"names":["BuyablePower","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","purchased","level","cost","setState","purchase","name","_this2","remainingCP","Number","react_default","a","createElement","majorCost","Button","color","variant","onClick","setPurchased","minorCost","lesserCost","React","Component","ManagePowersPanel","selectedPowers","totalCP","powerData","forEach","power","_this3","Dialog","aria-describedby","aria-labelledby","className","fullWidth","onClose","handleClose","open","DialogTitle","DialogActions","onSubmit","handleConfirm","FormControl","required","map","row","BuyablePower_BuyablePower","purchasePower","NavBar","_ref","toggleManagePowers","toggleManageArch","selectedArch","handleArchChange","bind","assertThisInitialized","handleLevelChange","event","target","value","onChange","buildArchOptions","TextField","id","label","type","inputProps","min","max","step","arr","currentArch","archData","push","InfoPanel","abilityList","buffList","rows","columns","field","headerName","width","flex","renderCell","params","split","Tooltip","title","arrow","interactive","i","abilities","length","action","atk","effect","replaceAll","Box","minHeight","style","height","index_esm","hideFooter","hideFooterPagination","App","closePanels","showManagePowersPanel","showManageArchPanel","parsedAbilities","parsedBuffs","parsedArch","archName","window","localStorage","getItem","sp","JSON","parse","fetch","then","r","text","csvToJson","parseData","components_NavBar","InfoPanel_InfoPanel","buffs","ManagePowersPanel_ManagePowersPanel","characterPoints","updateSelectedPowers","ManageArchPanel_ManagePowersPanel","updateSelectedArch","lev","setItem","stringify","csv","lines","result","headers","obj","currentline","j","arguments","undefined","lesserRank","majorRank","minorRank","trainingPoints","willDice","val","rank","ability","dmg","detail","tags","condition","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.41adba6c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button\n} from '@material-ui/core';\n\n\ninterface IProps {\n    name: string;\n    majorCost: number;\n    minorCost: number;\n    lesserCost: number;\n    purchase: any;\n    purchased: number;\n    remainingCP: number;\n}\n\ninterface IState {\n    purchased: number; //1-2-3 for lesser-minor-major. 0 is nothing\n}\n\nexport default class BuyablePower extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            purchased: this.props.purchased\n        };\n    }\n\n    setPurchased(level: number, cost: number) {\n        this.setState({\n            purchased: level\n        })\n        this.props.purchase(this.props.name, level, cost);\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        if (this.state.purchased == 0) {\n            var remainingCP = Number(this.props.remainingCP); //weird bug makes me do this\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                        {this.props.majorCost > 0 &&\n                            this.props.majorCost <= remainingCP &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(3, this.props.majorCost)}>\n                                {this.props.majorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.minorCost > 0 &&\n                            this.props.minorCost <= remainingCP &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(2, this.props.minorCost)}>\n                                {this.props.minorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.lesserCost > 0 &&\n                            this.props.lesserCost <= remainingCP &&\n\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(1, this.props.lesserCost)}>\n                                {this.props.lesserCost} </Button>)}\n                    </td>\n                </tr>\n            )\n        } else {\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                        {this.state.purchased == 3 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.majorCost)}>\n                                X </Button>)}\n                    </td>\n                    <td>\n                        {this.state.purchased == 2 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.minorCost)}>\n                                X </Button>)}\n                    </td>\n                    <td>\n                        {this.state.purchased == 1 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.lesserCost)}>\n                                X </Button>)}\n                    </td>\n                </tr>\n            )\n        }\n    }\n}","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input\n} from '@material-ui/core';\nimport BuyablePower from \"./BuyablePower\";\n\n\ninterface IProps {\n  powerData: any[];\n  totalCP: number;\n  selectedPowers: any;\n  handleConfirm: (selectedPowers: any) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n  selectedPowers: any;\n  remainingCP: number;\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedPowers: this.props.selectedPowers,\n      remainingCP: this.props.totalCP\n    };\n  }\n\n  componentDidMount() {\n    //calculate remaining CP based on all data\n    var remainingCP = this.props.totalCP;\n    this.props.powerData.forEach(power => {\n      if (this.props.selectedPowers[power[\"Power\"]]) {\n        switch (this.props.selectedPowers[power[\"Power\"]]) {\n          case 1:\n            remainingCP -= Number(power[\"Lesseer\"]);\n            break;\n          case 2:\n            remainingCP -= Number(power[\"Minor\"]);\n            break;\n          case 3:\n            remainingCP -= Number(power[\"Major\"]);\n            break;\n          default:\n            return;\n        }\n      }\n    });\n    this.setState({\n      remainingCP: remainingCP\n    });\n  }\n\n  render() {\n    return (\n      <Dialog\n        aria-describedby=\"Manage Powers\"\n        aria-labelledby=\"Manage Powers\"\n        className=\"manage-powers-dialog\"\n        fullWidth={true}\n        onClose={this.props.handleClose}\n        open={true}\n      >\n        <DialogTitle>Manage Powers</DialogTitle>\n\n        <DialogActions>\n          <form onSubmit={(selectedPowers: any) => this.props.handleConfirm(this.state.selectedPowers)} >\n            <FormControl required variant=\"outlined\">\n              Remaining CP: {this.state.remainingCP}\n\n\n              {/*\n                </FormControl>\n                <FormControl className=\"inputControl\">\n              */}\n              <table><thead><tr><th>Power</th><th>Major</th><th>Minor</th><th>Lesser</th></tr></thead>\n                <tbody>\n                  {this.props.powerData && this.props.powerData.map((row: any[string]) => {\n                    if (row[\"Major\"] || row[\"Minor\"] || row[\"Lesser\"]) {\n                      //buyable power\n                      return (\n                        <BuyablePower\n                          name={row[\"Power\"]}\n                          majorCost={row[\"Major\"]}\n                          minorCost={row[\"Minor\"]}\n                          lesserCost={row[\"Lesser\"]}\n                          purchase={(name: string, level: number, cost: number) => this.purchasePower(name, level, cost)}\n                          purchased={this.state.selectedPowers[row[\"Power\"]] ? this.state.selectedPowers[row[\"Power\"]] : 0}\n                          remainingCP={this.state.remainingCP}\n                        />\n                      )\n                    }\n                  })}\n                </tbody>\n              </table>\n\n            </FormControl>\n            <div className=\"actionButtons\">\n              <Button onClick={() => this.props.handleConfirm(this.state.selectedPowers)} color=\"primary\">Save</Button>\n              <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n            </div>\n          </form>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  public purchasePower(name: string, level: number, cost: number) {\n    this.state.selectedPowers[name] = level;\n    this.setState({\n      //bug since this is done async\n      remainingCP: this.state.remainingCP - cost\n    })\n  }\n\n}\n","import React from \"react\";\nimport { Button } from '@material-ui/core';\nimport ManagePowersPanel from \"./ManagePowersPanel\";\n\n// Stateless Functional Component\n\nconst NavBar = ({ toggleManagePowers , toggleManageArch}) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"navbar-brand\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={toggleManagePowers}> Powers </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={toggleManageArch}> Archetype/Level </Button>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TextField,\n  FormControl,\n} from '@material-ui/core';\nimport BuyablePower from \"./BuyablePower\";\n\ninterface IProps {\n  archData: any[];\n  selectedArch: string | null;\n  level: number | null;\n  handleConfirm: (selectedArch: string, level: number) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n  selectedArch: string;\n  level: number;\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedArch: this.props.selectedArch  ? this.props.selectedArch : \"Standard\",\n      level: this.props.level ? this.props.level : 1\n    };\n\n    this.handleArchChange = this.handleArchChange.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n  }\n  componentDidMount() {\n\n  }\n  handleArchChange(event: any) {\n    this.setState({ selectedArch: event.target.value });\n  }\n\n  handleLevelChange(event: any) {\n    this.setState({ level: Number(event.target.value) });\n  }\n\n  render() {\n    var currentArch: string = \"\";\n    return (\n      <Dialog\n        aria-describedby=\"Manage Archetype\"\n        aria-labelledby=\"Manage Archetype\"\n        className=\"manage-arch-dialog\"\n        fullWidth={true}\n        onClose={this.props.handleClose}\n        open={true}\n      >\n        <DialogTitle>Manage Archetype</DialogTitle>\n\n        <DialogActions>\n          <FormControl required variant=\"outlined\">\n            <select value={this.state.selectedArch}\n              onChange={this.handleArchChange} >\n              {this.buildArchOptions()}\n            </select>\n            <TextField\n              id=\"level-input\"\n              label=\"Level\"\n              type=\"number\"\n              value={this.state.level ? this.state.level : 1}\n              inputProps={{ min: \"1\", max: \"10\", step: \"1\" }}\n              onChange={this.handleLevelChange}\n              className=\"level-control\"\n            />\n            {/*<Container>\n              <table>\n                <tbody>\n                <tr>\n                  \n                </tr>\n                </tbody>\n              </table>\n            </Container>*/}\n          </FormControl>\n          <div className=\"actionButtons\">\n            <Button onClick={() => this.props.handleConfirm(this.state.selectedArch, this.state.level)} color=\"primary\">Save</Button>\n            <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  buildArchOptions() {\n    var arr: any[] = [];\n    var currentArch = \"\";\n    this.props.archData.forEach(row => {\n      if (row[\"Arch\"] && row[\"Arch\"] !== currentArch) {\n        //new row\n        currentArch = row[\"Arch\"];\n        arr.push(\n          <option\n            value={currentArch}>\n            {currentArch}\n          </option>\n        );\n      }\n    })\n    return arr;\n  }\n\n\n\n}\n","import React from 'react';\nimport {\n    Tooltip,\n    Button,\n    Box\n} from '@material-ui/core';\nimport { DataGrid, RowsProp, ColDef, CellParams } from '@material-ui/data-grid';\n\n\n\ninterface IProps {\n    abilities: any[]\n    buffs: any[]\n}\n\ninterface IState {\n\n}\n\nexport default class InfoPanel extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            abilityList: [],\n            buffList: []\n        };\n    }\n\n\n    render() {\n        const rows: RowsProp = [];\n        const columns: ColDef[] = [\n            { field: 'name', headerName: 'Name', width: 250 },\n            { field: 'action', headerName: 'Action', width: 120 },\n            { field: 'atk', headerName: 'Atk', width: 120 },\n            {\n                field: 'effect', headerName: 'Effect', flex: 100,\n                renderCell: (params: CellParams) => (\n                    <strong>\n                        {(params.value as string).split(\"|||\")[0]}\n                        <Tooltip title={(params.value as string).split(\"|||\")[1]} arrow interactive>\n                            <Button>?</Button>\n                        </Tooltip>\n                    </strong>\n                )\n            }\n        ];\n\n        for (let i = 0; i < this.props.abilities.length; i++) {\n            var a = this.props.abilities[i];\n            rows.push(\n                {\n                    id: i,\n                    name: a[\"name\"],\n                    action: a[\"action\"],\n                    atk: a[\"atk\"],\n                    effect: a[\"dmg\"] + \" \" + a[\"effect\"] + \"|||\" + a[\"detail\"].replaceAll(\"\\\"\", \"\")\n                }\n            )\n\n        }\n        return (\n            <Box minHeight=\"25%\">\n                <h3>Abilities</h3>\n                <div style={{ height: 300, width: '100%' }}>\n                    <DataGrid\n                        hideFooter={true}\n                        hideFooterPagination={true}\n                        rows={rows}\n                        columns={columns} />\n                </div>\n            </Box>\n\n        )\n    }\n\n}\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport ManagePowersPanel from \"./components/ManagePowersPanel\";\nimport ManageArchPanel from \"./components/ManageArchPanel\";\n\nimport InfoPanel from \"./components/InfoPanel\";\nimport { stringNumberComparer } from \"@material-ui/data-grid\";\n\ninterface IArch {\n  name: string\n  level: number\n  lesserRank: number\n  minorRank: number\n  majorRank: number\n  characterPoints: number\n  trainingPoints: number\n  willDice: number\n}\n\ninterface IState {\n  showManagePowersPanel: boolean\n  showManageArchPanel: boolean\n  selectedPowers: any\n  selectedArch: string\n  level: number\n  powerData: any[]\n  archData: any[]\n  parsedAbilities: any[]\n  parsedBuffs: any[]\n  parsedArch: IArch | null\n}\n\ninterface IProps {\n}\n\nexport default class App extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      showManagePowersPanel: false,\n      showManageArchPanel: false,\n      selectedPowers: {},\n      selectedArch: \"\",\n      level: 1,\n      powerData: [],\n      archData: [],\n      parsedAbilities: [],\n      parsedBuffs: [],\n      parsedArch: null\n    }\n\n  }\n\n  componentDidMount() {\n    let archName = window.localStorage.getItem(\"selectedArch\");\n    let level = window.localStorage.getItem(\"level\");\n    let sp = window.localStorage.getItem(\"selectedPowers\");\n\n    if (archName) {\n      this.setState({\n        selectedArch: archName\n      })\n    }\n    if (level) {\n      this.setState({\n        level: JSON.parse(level)\n      })\n    }\n    if (sp) {\n      this.setState({\n        selectedPowers: JSON.parse(sp)\n      })\n    }\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/powers.csv\")\n      .then((r) => r.text())\n      .then(text => {\n        this.setState({\n          powerData: this.csvToJson(text)\n        });\n        this.parseData();\n      });\n\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/arch.csv\")\n      .then((r) => r.text())\n      .then(text => {\n        this.setState({\n          archData: this.csvToJson(text)\n        });\n        this.parseData();\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.archData !== [] &&\n          this.state.powerData !== [] && (\n            <NavBar\n              toggleManagePowers={\n                this.showManagePowersPanel\n              }\n              toggleManageArch={\n                this.showManageArchPanel\n              }\n            />\n          )}\n        <main className=\"container\">\n          {this.state.selectedArch == \"\" ? (<strong>Select an Archetype</strong>) :\n            (<InfoPanel\n              abilities={this.state.parsedAbilities}\n              buffs={this.state.parsedBuffs}\n            />)}\n        </main>\n        {\n          this.state.showManagePowersPanel &&\n          this.state.parsedArch &&\n          (<ManagePowersPanel\n            powerData={this.state.powerData}\n            selectedPowers={this.state.selectedPowers}\n            totalCP={this.state.parsedArch.characterPoints}\n            handleConfirm={(selectedPowers: any) =>\n              this.updateSelectedPowers(selectedPowers)\n            }\n            handleClose={() => this.closePanels()\n            }\n          />)}\n        {\n          this.state.showManageArchPanel &&\n          (<ManageArchPanel\n            archData={this.state.archData}\n            selectedArch={this.state.selectedArch}\n            level={this.state.parsedArch ? this.state.parsedArch.level : 1}\n            handleConfirm={(name: string, level: number) =>\n              this.updateSelectedArch(name, level)\n            }\n            handleClose={() => this.closePanels()\n            }\n          />)\n        }\n      </div >\n    );\n  }\n\n  closePanels = () => {\n    this.setState({\n      showManagePowersPanel: false,\n      showManageArchPanel: false\n    })\n  }\n\n  updateSelectedArch(name: string, lev: number) {\n    this.setState({\n      selectedArch: name,\n      level: lev\n    })\n    window.localStorage.setItem(\"selectedArch\", name);\n    window.localStorage.setItem(\"level\", JSON.stringify(lev));\n    this.parseData(this.state.selectedPowers, name, lev);\n    this.closePanels();\n  }\n\n  updateSelectedPowers(selectedPowers: any) {\n    this.setState({\n      selectedPowers: selectedPowers\n    })\n    window.localStorage.setItem(\"selectedPowers\", JSON.stringify(selectedPowers));\n    this.parseData(selectedPowers);\n    this.closePanels();\n  }\n\n  showManagePowersPanel = () => {\n    this.setState({\n      showManagePowersPanel: true\n    }\n    );\n  }\n  showManageArchPanel = () => {\n    this.setState({\n      showManageArchPanel: true\n    }\n    );\n  }\n\n  //var csv is the CSV file with headers\n  public csvToJson(csv: string) {\n\n    var lines = csv.split(\"\\r\\n\");\n\n    var result = [];\n\n    //todo would be nice to support commas in data\n    //by skipping escaped commas\n    var headers = lines[0].split(\",\");\n\n    for (var i = 1; i < lines.length; i++) {\n\n      var obj: any = {};\n      var currentline = lines[i].split(\",\");\n\n      for (var j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n\n    }\n\n    return result;\n    //return JSON.stringify(result); //JSON\n  }\n\n\n\n  private parseData(sp: any = this.state.selectedPowers, selectedArch: string = this.state.selectedArch, level: number = this.state.level) {\n    if (selectedArch === \"\" ||\n      level === 0 ||\n      this.state.archData === [] ||\n      this.state.powerData === []\n    ) {\n      return;\n    }\n\n    var parsedArch: IArch = {\n      characterPoints: 0,\n      lesserRank: 0,\n      level: level,\n      majorRank: 0,\n      minorRank: 0,\n      name: selectedArch,\n      trainingPoints: 0,\n      willDice: 0\n    }\n\n    this.state.archData.forEach(function (row) {\n      if (row[\"Arch\"] === selectedArch) {\n        var val = row[\"Level \" + level];\n        var detail = row[\"Detail\"];\n        //todo - add detail to parsedArch\n        switch (row[\"Row\"]) {\n          case \"CP\":\n            parsedArch.characterPoints = val;\n            break;\n          case \"TP\":\n            parsedArch.trainingPoints = val;\n            break;\n          case \"Major\":\n            parsedArch.majorRank = val;\n            break;\n          case \"Minor\":\n            parsedArch.minorRank = val;\n            break;\n          case \"Lesser\":\n            parsedArch.lesserRank = val;\n            break;\n          case \"Will Dice\":\n            parsedArch.willDice = val;\n            break;\n          default:\n          //do nothing\n        }\n      }\n    });\n\n    var abilities: any[] = [];\n    var buffs: any[] = [];\n    //todo - get Powers to give you the appropriate abilities and buffs\n    this.state.powerData.forEach(power => {\n      if (sp[power[\"Power\"]] &&\n        sp[power[\"Power\"]] > 0 &&\n        parsedArch) {\n        var rank = 0;\n        switch (sp[power[\"Power\"]]) {\n          case 1:\n            rank = parsedArch.lesserRank;\n            break;\n          case 2:\n            rank = parsedArch.minorRank;\n            break;\n          case 3:\n            rank = parsedArch.majorRank;\n            break;\n          default:\n            //do nothing\n            break;\n        }\n        if (power[\"Row\"] === \"Ability\") {\n          var ability = {\n            \"name\": power[\"Power\"],\n            \"action\": power[\"Action\"],\n            \"dmg\": power[\"r\" + rank],\n            \"atk\": \"1d20\",\n            \"effect\": power[\"Effect\"],\n            \"detail\": power[\"Detail\"],\n            \"tags\": power[\"Tags\"].split(\" \"),\n            \"condition\": power[\"Condition\"]\n          };\n\n          abilities.push(ability);\n        } else if (power[\"row\"] === \"Buff\") {\n          //todo\n        }\n      }\n    });\n\n    //todo - apply buffs\n\n    this.setState({\n      parsedAbilities: abilities,\n      parsedBuffs: buffs,\n      parsedArch: parsedArch\n    })\n\n\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}