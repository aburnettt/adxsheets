{"version":3,"sources":["components/ManagePowersPanel.tsx","components/NavBar.jsx","App.tsx","index.js"],"names":["ManagePowersPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedPowers","totalCP","remainingCP","_this2","react_default","a","createElement","Dialog","aria-describedby","aria-labelledby","className","fullWidth","onClose","handleClose","open","DialogTitle","DialogContent","DialogActions","onSubmit","handleConfirm","FormControl","required","variant","InputLabel","id","TextField","label","type","onChange","calculateRemainingCP","JSON","stringify","powerData","map","row","Button","onClick","color","React","Component","NavBar","_ref","toggleManagePowers","App","closePanels","setState","showManagePowersPanel","updateSelectedPowers","fetch","then","r","text","csvToJson","_this3","components_NavBar","ManagePowersPanel_ManagePowersPanel","csv","lines","split","result","headers","i","length","obj","currentline","j","push","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.35e901da.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input\n} from '@material-ui/core';\n\n\ninterface IProps {\n  powerData: any[];\n  selectedPowers: any[];\n  handleConfirm: (selectedPowers:any) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n   selectedPowers: any; //int array?\n   totalCP: number;\n   remainingCP: number;\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n    constructor(props:IProps) {\n        super(props);\n        this.state = {\n                        selectedPowers: \"\",\n                        totalCP: 0,\n                        remainingCP: 0\n                     };\n    }\n\n    render() { \n        return (\n        <Dialog\n          aria-describedby=\"Manage Powers\"\n          aria-labelledby=\"Manage Powers\"\n          className=\"manage-powers-dialog\"\n          fullWidth={true}\n          onClose={this.props.handleClose}\n          open={true}\n        >\n          <DialogTitle>Manage Powers</DialogTitle>\n          <DialogContent>\n            Manage your powers here\n          </DialogContent>\n          \n          <DialogActions>\n            <form onSubmit={(selectedPowers : any) => this.props.handleConfirm(this.state.selectedPowers)} >\n                <FormControl required variant=\"outlined\" className=\"inputControl\">\n                <InputLabel id=\"model-type-input-label\">Total CP</InputLabel>\n                <TextField\n                    id=\"total-cp-input\"\n                    label=\"Total CP\"\n                    type=\"number\"\n                    required\n                    onChange={this.calculateRemainingCP}\n                    className=\"total-cp-input\"\n                />\n                  {//this.props.powerData && \n                     \n                  }\n                <div><pre>{JSON.stringify(this.props.powerData, null, 2) }</pre></div>\n                \n                </FormControl>\n                <FormControl className=\"inputControl\">\n                \n                  {this.props.powerData && this.props.powerData.map((row) =>\n                  <li>{row[\"Power\"]}</li>\n                  )\n                  }\n                \n                \n                </FormControl>\n                <div className=\"actionButtons\">\n                    <Button type=\"submit\">Save</Button>\n                    <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n                </div>\n            </form>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n\n    private calculateRemainingCP(){\n\n    }\n}\n","import React from \"react\";\nimport { Button } from '@material-ui/core';\nimport ManagePowersPanel from \"./ManagePowersPanel\";\n\n// Stateless Functional Component\n\nconst NavBar = ({toggleManagePowers}) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"navbar-brand\">\n      <Button\n      color=\"primary\"\n      variant=\"contained\"\n      onClick={toggleManagePowers}> Manage Powers </Button>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport ManagePowersPanel from \"./components/ManagePowersPanel\";\nimport { flattenDiagnosticMessageText } from \"typescript\";\n\ninterface IState {\n  showManagePowersPanel: boolean;\n  selectedPowers: any; //number array?\n  powerData: any[]\n}\n\ninterface IProps {\n}\n\nexport default class App extends React.Component<IProps, IState> {\n  \n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n        showManagePowersPanel: false,\n        selectedPowers: \"\",\n        powerData: []\n    }\n\n  }\n\n  componentDidMount() {\n\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/powers.csv\")\n      .then((r) => r.text())\n       .then(text  => {\n         this.setState({\n          powerData: this.csvToJson(text)\n          });  \n        });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar \n          toggleManagePowers={\n            this.showManagePowersPanel\n          }\n        />\n        <main className=\"container\">\n{/*          <StatPanel />\n          <AbilityPanel />\n\n*/}\n        </main>\n        {this.state.showManagePowersPanel && \n        (<ManagePowersPanel\n          powerData={this.state.powerData}\n          selectedPowers={this.state.selectedPowers}\n          handleConfirm={(selectedPowers: any) =>\n            this.updateSelectedPowers(selectedPowers)\n          }\n          handleClose={() => this.closePanels()\n          }\n        /> )}\n      </div>\n    );\n  }\n\n  closePanels = () => {\n    this.setState({\n      showManagePowersPanel: false\n    })\n  }\n\n  updateSelectedPowers= (selectedPowers: any) => {\n\n  }\n\n  showManagePowersPanel = () => {\n    this.setState({\n      showManagePowersPanel: true\n    }\n    );\n  }\n\n  //var csv is the CSV file with headers\npublic csvToJson(csv: string){\n\n  var lines=csv.split(\"\\r\\n\");\n\n  var result = [];\n\n  //todo would be nice to support commas in data\n  //by skipping escaped commas\n  var headers=lines[0].split(\",\");\n\n  for(var i=1;i<lines.length;i++){\n\n\t  var obj: any = {};\n\t  var currentline=lines[i].split(\",\");\n\n\t  for(var j=0;j<headers.length;j++){\n\t\t  obj[headers[j]] = currentline[j];\n\t  }\n\n\t  result.push(obj);\n\n  }\n  \n  return result;\n  //return JSON.stringify(result); //JSON\n}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}