{"version":3,"sources":["components/BuyablePower.tsx","components/ManagePowersPanel.tsx","components/NavBar.jsx","components/ManageArchPanel.tsx","components/InfoPanel.tsx","App.tsx","index.js"],"names":["BuyablePower","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","purchased","level","cost","setState","purchase","name","setPurchased","lesserCost","minorCost","majorCost","_this2","remainingCP","Number","react_default","a","createElement","Button","color","variant","onClick","React","Component","ManagePowersPanel","selectedPowers","totalCP","Dialog","aria-describedby","aria-labelledby","className","fullWidth","onClose","handleClose","open","DialogTitle","DialogActions","onSubmit","handleConfirm","FormControl","required","powerData","map","row","BuyablePower_BuyablePower","purchasePower","NavBar","_ref","toggleManagePowers","toggleManageArch","selectedArch","handleArchChange","bind","assertThisInitialized","handleLevelChange","event","target","value","onChange","buildArchOptions","TextField","id","label","type","inputProps","min","max","step","arr","currentArch","archData","forEach","push","InfoPanel","abilityList","buffList","rows","columns","field","headerName","width","flex","renderCell","params","split","Tooltip","title","arrow","interactive","i","abilities","length","action","atk","effect","replaceAll","Box","minHeight","style","height","index_esm","hideFooter","hideFooterPagination","App","closePanels","showManagePowersPanel","showManageArchPanel","parsedAbilities","parsedBuffs","parsedArch","archName","window","localStorage","getItem","sp","JSON","parse","fetch","then","r","text","csvToJson","parseData","_this3","components_NavBar","InfoPanel_InfoPanel","buffs","ManagePowersPanel_ManagePowersPanel","characterPoints","updateSelectedPowers","ManageArchPanel_ManagePowersPanel","updateSelectedArch","lev","setItem","stringify","csv","lines","result","headers","obj","currentline","j","arguments","undefined","lesserRank","majorRank","minorRank","trainingPoints","willDice","val","power","rank","ability","dmg","detail","tags","condition","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.37cf023e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Select,\n    Input\n} from '@material-ui/core';\n\n\ninterface IProps {\n    name: string;\n    majorCost: number;\n    minorCost: number;\n    lesserCost: number;\n    purchase: any;\n    purchased: number;\n    remainingCP: number;\n}\n\ninterface IState {\n    purchased: number; //1-2-3 for lesser-minor-major. 0 is nothing\n}\n\nexport default class BuyablePower extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            purchased: this.props.purchased\n        };\n    }\n\n    setPurchased(level: number, cost: number) {\n        this.setState({\n            purchased: level\n        })\n        this.props.purchase(this.props.name, level, cost);\n    }\n    componentDidMount() {\n        if (this.props.purchased == 0) {\n            return;\n        } else if (this.props.purchased == 1) {\n            this.setPurchased(this.props.purchased, this.props.lesserCost);\n        } else if (this.props.purchased == 2) {\n            this.setPurchased(this.props.purchased, this.props.minorCost);\n        } else if (this.props.purchased == 3) {\n            this.setPurchased(this.props.purchased, this.props.majorCost);\n        }\n    }\n\n\n    render() {\n        if (this.state.purchased == 0) {\n            var remainingCP = Number(this.props.remainingCP); //weird bug makes me do this\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                        {this.props.majorCost > 0 &&\n                            this.props.majorCost <= remainingCP &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(3, this.props.majorCost)}>\n                                {this.props.majorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.minorCost > 0 &&\n                            this.props.minorCost <= remainingCP &&\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(2, this.props.minorCost)}>\n                                {this.props.minorCost} </Button>)}\n                    </td>\n                    <td>\n                        {this.props.lesserCost > 0 &&\n                            this.props.lesserCost <= remainingCP &&\n\n                            (<Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(1, this.props.lesserCost)}>\n                                {this.props.lesserCost} </Button>)}\n                    </td>\n                </tr>\n            )\n        } else {\n            return (\n                <tr>\n                    <td>{this.props.name}</td>\n                    <td>\n                        {this.state.purchased == 3 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.majorCost)}>\n                                X </Button>)}\n                    </td>\n                    <td>\n                        {this.state.purchased == 2 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.minorCost)}>\n                                X </Button>)}\n                    </td>\n                    <td>\n                        {this.state.purchased == 1 && (\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                onClick={() => this.setPurchased(0, 0 - this.props.lesserCost)}>\n                                X </Button>)}\n                    </td>\n                </tr>\n            )\n        }\n    }\n}","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input\n} from '@material-ui/core';\nimport BuyablePower from \"./BuyablePower\";\n\n\ninterface IProps {\n  powerData: any[];\n  totalCP: number;\n  selectedPowers: any;\n  handleConfirm: (selectedPowers: any) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n  selectedPowers: any;\n  remainingCP: number;\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedPowers: this.props.selectedPowers,\n      remainingCP: this.props.totalCP\n    };\n  }\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <Dialog\n        aria-describedby=\"Manage Powers\"\n        aria-labelledby=\"Manage Powers\"\n        className=\"manage-powers-dialog\"\n        fullWidth={true}\n        onClose={this.props.handleClose}\n        open={true}\n      >\n        <DialogTitle>Manage Powers</DialogTitle>\n\n        <DialogActions>\n          <form onSubmit={(selectedPowers: any) => this.props.handleConfirm(this.state.selectedPowers)} >\n            <FormControl required variant=\"outlined\">\n              Remaining CP: {this.state.remainingCP}\n\n\n              {/*\n                </FormControl>\n                <FormControl className=\"inputControl\">\n              */}\n              <table><thead><tr><th>Power</th><th>Major</th><th>Minor</th><th>Lesser</th></tr></thead>\n                <tbody>\n                  {this.props.powerData && this.props.powerData.map((row: any[string]) => {\n                    if (row[\"Major\"] || row[\"Minor\"] || row[\"Lesser\"]) {\n                      //buyable power\n                      return (\n                        <BuyablePower\n                          name={row[\"Power\"]}\n                          majorCost={row[\"Major\"]}\n                          minorCost={row[\"Minor\"]}\n                          lesserCost={row[\"Lesser\"]}\n                          purchase={(name: string, level: number, cost: number) => this.purchasePower(name, level, cost)}\n                          purchased={this.state.selectedPowers[row[\"Power\"]] ? this.state.selectedPowers[row[\"Power\"]] : 0}\n                          remainingCP={this.state.remainingCP}\n                        />\n                      )\n                    }\n                  })}\n                </tbody>\n              </table>\n\n            </FormControl>\n            <div className=\"actionButtons\">\n              <Button onClick={() => this.props.handleConfirm(this.state.selectedPowers)} color=\"primary\">Save</Button>\n              <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n            </div>\n          </form>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  public purchasePower(name: string, level: number, cost: number) {\n    this.state.selectedPowers[name] = level;\n    this.setState({\n      //bug since this is done async\n      remainingCP: this.state.remainingCP - cost\n    })\n  }\n\n}\n","import React from \"react\";\nimport { Button } from '@material-ui/core';\nimport ManagePowersPanel from \"./ManagePowersPanel\";\n\n// Stateless Functional Component\n\nconst NavBar = ({ toggleManagePowers , toggleManageArch}) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"navbar-brand\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={toggleManagePowers}> Powers </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={toggleManageArch}> Archetype/Level </Button>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TextField,\n  FormControl,\n} from '@material-ui/core';\nimport BuyablePower from \"./BuyablePower\";\n\ninterface IProps {\n  archData: any[];\n  selectedArch: string | null;\n  level: number | null;\n  handleConfirm: (selectedArch: string, level: number) => void;\n  handleClose: () => void;\n}\n\ninterface IState {\n  selectedArch: string;\n  level: number;\n}\n\nexport default class ManagePowersPanel extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      selectedArch: this.props.selectedArch  ? this.props.selectedArch : \"Standard\",\n      level: this.props.level ? this.props.level : 1\n    };\n\n    this.handleArchChange = this.handleArchChange.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n  }\n  componentDidMount() {\n\n  }\n  handleArchChange(event: any) {\n    this.setState({ selectedArch: event.target.value });\n  }\n\n  handleLevelChange(event: any) {\n    this.setState({ level: Number(event.target.value) });\n  }\n\n  render() {\n    var currentArch: string = \"\";\n    return (\n      <Dialog\n        aria-describedby=\"Manage Archetype\"\n        aria-labelledby=\"Manage Archetype\"\n        className=\"manage-arch-dialog\"\n        fullWidth={true}\n        onClose={this.props.handleClose}\n        open={true}\n      >\n        <DialogTitle>Manage Archetype</DialogTitle>\n\n        <DialogActions>\n          <FormControl required variant=\"outlined\">\n            <select value={this.state.selectedArch}\n              onChange={this.handleArchChange} >\n              {this.buildArchOptions()}\n            </select>\n            <TextField\n              id=\"level-input\"\n              label=\"Level\"\n              type=\"number\"\n              value={this.state.level ? this.state.level : 1}\n              inputProps={{ min: \"1\", max: \"10\", step: \"1\" }}\n              onChange={this.handleLevelChange}\n              className=\"level-control\"\n            />\n            {/*<Container>\n              <table>\n                <tbody>\n                <tr>\n                  \n                </tr>\n                </tbody>\n              </table>\n            </Container>*/}\n          </FormControl>\n          <div className=\"actionButtons\">\n            <Button onClick={() => this.props.handleConfirm(this.state.selectedArch, this.state.level)} color=\"primary\">Save</Button>\n            <Button onClick={() => this.props.handleClose()} color=\"primary\">Cancel</Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  buildArchOptions() {\n    var arr: any[] = [];\n    var currentArch = \"\";\n    this.props.archData.forEach(row => {\n      if (row[\"Arch\"] && row[\"Arch\"] !== currentArch) {\n        //new row\n        currentArch = row[\"Arch\"];\n        arr.push(\n          <option\n            value={currentArch}>\n            {currentArch}\n          </option>\n        );\n      }\n    })\n    return arr;\n  }\n\n\n\n}\n","import React from 'react';\nimport {\n    Tooltip,\n    Button,\n    Box\n} from '@material-ui/core';\nimport { DataGrid, RowsProp, ColDef, CellParams } from '@material-ui/data-grid';\n\n\n\ninterface IProps {\n    abilities: any[]\n    buffs: any[]\n}\n\ninterface IState {\n\n}\n\nexport default class InfoPanel extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            abilityList: [],\n            buffList: []\n        };\n    }\n\n\n    render() {\n        const rows: RowsProp = [];\n        const columns: ColDef[] = [\n            { field: 'name', headerName: 'Name', width: 250 },\n            { field: 'action', headerName: 'Action', width: 120 },\n            { field: 'atk', headerName: 'Atk', width: 120 },\n            {\n                field: 'effect', headerName: 'Effect', flex: 100,\n                renderCell: (params: CellParams) => (\n                    <strong>\n                        {(params.value as string).split(\"|||\")[0]}\n                        <Tooltip title={(params.value as string).split(\"|||\")[1]} arrow interactive>\n                            <Button>?</Button>\n                        </Tooltip>\n                    </strong>\n                )\n            }\n        ];\n\n        for (let i = 0; i < this.props.abilities.length; i++) {\n            var a = this.props.abilities[i];\n            rows.push(\n                {\n                    id: i,\n                    name: a[\"name\"],\n                    action: a[\"action\"],\n                    atk: a[\"atk\"],\n                    effect: a[\"dmg\"] + \" \" + a[\"effect\"] + \"|||\" + a[\"detail\"].replaceAll(\"\\\"\", \"\")\n                }\n            )\n\n        }\n        return (\n            <Box minHeight=\"25%\">\n                <h3>Abilities</h3>\n                <div style={{ height: 300, width: '100%' }}>\n                    <DataGrid\n                        hideFooter={true}\n                        hideFooterPagination={true}\n                        rows={rows}\n                        columns={columns} />\n                </div>\n            </Box>\n\n        )\n    }\n\n}\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport ManagePowersPanel from \"./components/ManagePowersPanel\";\nimport ManageArchPanel from \"./components/ManageArchPanel\";\n\nimport InfoPanel from \"./components/InfoPanel\";\nimport { stringNumberComparer } from \"@material-ui/data-grid\";\n\ninterface IArch {\n  name: string\n  level: number\n  lesserRank: number\n  minorRank: number\n  majorRank: number\n  characterPoints: number\n  trainingPoints: number\n  willDice: number\n}\n\ninterface IState {\n  showManagePowersPanel: boolean\n  showManageArchPanel: boolean\n  selectedPowers: any\n  selectedArch: string\n  level: number\n  powerData: any[]\n  archData: any[]\n  parsedAbilities: any[]\n  parsedBuffs: any[]\n  parsedArch: IArch | null\n}\n\ninterface IProps {\n}\n\nexport default class App extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      showManagePowersPanel: false,\n      showManageArchPanel: false,\n      selectedPowers: {},\n      selectedArch: \"\",\n      level: 1,\n      powerData: [],\n      archData: [],\n      parsedAbilities: [],\n      parsedBuffs: [],\n      parsedArch: null\n    }\n\n  }\n\n  componentDidMount() {\n    let archName = window.localStorage.getItem(\"selectedArch\");\n    let level = window.localStorage.getItem(\"level\");\n    let sp = window.localStorage.getItem(\"selectedPowers\");\n\n    if (archName) {\n      this.setState({\n        selectedArch: archName\n      })\n    }\n    if (level) {\n      this.setState({\n        level: JSON.parse(level)\n      })\n    }\n    if (sp) {\n      this.setState({\n        selectedPowers: JSON.parse(sp)\n      })\n    }\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/powers.csv\")\n      .then((r) => r.text())\n      .then(text => {\n        this.setState({\n          powerData: this.csvToJson(text)\n        });\n        this.parseData();\n      });\n\n    fetch(\"https://raw.githubusercontent.com/aburnettt/adxsheets/master/src/data/arch.csv\")\n      .then((r) => r.text())\n      .then(text => {\n        this.setState({\n          archData: this.csvToJson(text)\n        });\n        this.parseData();\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.archData !== [] &&\n          this.state.powerData !== [] && (\n            <NavBar\n              toggleManagePowers={\n                this.showManagePowersPanel\n              }\n              toggleManageArch={\n                this.showManageArchPanel\n              }\n            />\n          )}\n        <main className=\"container\">\n          {this.state.selectedArch == \"\" ? (<strong>Select an Archetype</strong>) :\n            (<InfoPanel\n              abilities={this.state.parsedAbilities}\n              buffs={this.state.parsedBuffs}\n            />)}\n        </main>\n        {\n          this.state.showManagePowersPanel &&\n          this.state.parsedArch &&\n          (<ManagePowersPanel\n            powerData={this.state.powerData}\n            selectedPowers={this.state.selectedPowers}\n            totalCP={this.state.parsedArch.characterPoints}\n            handleConfirm={(selectedPowers: any) =>\n              this.updateSelectedPowers(selectedPowers)\n            }\n            handleClose={() => this.closePanels()\n            }\n          />)}\n        {\n          this.state.showManageArchPanel &&\n          (<ManageArchPanel\n            archData={this.state.archData}\n            selectedArch={this.state.selectedArch}\n            level={this.state.parsedArch ? this.state.parsedArch.level : 1}\n            handleConfirm={(name: string, level: number) =>\n              this.updateSelectedArch(name, level)\n            }\n            handleClose={() => this.closePanels()\n            }\n          />)\n        }\n      </div >\n    );\n  }\n\n  closePanels = () => {\n    this.setState({\n      showManagePowersPanel: false,\n      showManageArchPanel: false\n    })\n  }\n\n  updateSelectedArch(name: string, lev: number) {\n    this.setState({\n      selectedArch: name,\n      level: lev\n    })\n    window.localStorage.setItem(\"selectedArch\", name);\n    window.localStorage.setItem(\"level\", JSON.stringify(lev));\n    this.parseData(this.state.selectedPowers, name, lev);\n    this.closePanels();\n  }\n\n  updateSelectedPowers(selectedPowers: any) {\n    this.setState({\n      selectedPowers: selectedPowers\n    })\n    window.localStorage.setItem(\"selectedPowers\", JSON.stringify(selectedPowers));\n    this.parseData(selectedPowers);\n    this.closePanels();\n  }\n\n  showManagePowersPanel = () => {\n    this.setState({\n      showManagePowersPanel: true\n    }\n    );\n  }\n  showManageArchPanel = () => {\n    this.setState({\n      showManageArchPanel: true\n    }\n    );\n  }\n\n  //var csv is the CSV file with headers\n  public csvToJson(csv: string) {\n\n    var lines = csv.split(\"\\r\\n\");\n\n    var result = [];\n\n    //todo would be nice to support commas in data\n    //by skipping escaped commas\n    var headers = lines[0].split(\",\");\n\n    for (var i = 1; i < lines.length; i++) {\n\n      var obj: any = {};\n      var currentline = lines[i].split(\",\");\n\n      for (var j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n\n    }\n\n    return result;\n    //return JSON.stringify(result); //JSON\n  }\n\n\n\n  private parseData(sp: any = this.state.selectedPowers, selectedArch: string = this.state.selectedArch, level: number = this.state.level) {\n    if (selectedArch === \"\" ||\n      level === 0 ||\n      this.state.archData === [] ||\n      this.state.powerData === []\n    ) {\n      return;\n    }\n\n    var parsedArch: IArch = {\n      characterPoints: 0,\n      lesserRank: 0,\n      level: level,\n      majorRank: 0,\n      minorRank: 0,\n      name: selectedArch,\n      trainingPoints: 0,\n      willDice: 0\n    }\n\n    this.state.archData.forEach(function (row) {\n      if (row[\"Arch\"] === selectedArch) {\n        var val = row[\"Level \" + level];\n        var detail = row[\"Detail\"];\n        //todo - add detail to parsedArch\n        switch (row[\"Row\"]) {\n          case \"CP\":\n            parsedArch.characterPoints = val;\n            break;\n          case \"TP\":\n            parsedArch.trainingPoints = val;\n            break;\n          case \"Major\":\n            parsedArch.majorRank = val;\n            break;\n          case \"Minor\":\n            parsedArch.minorRank = val;\n            break;\n          case \"Lesser\":\n            parsedArch.lesserRank = val;\n            break;\n          case \"Will Dice\":\n            parsedArch.willDice = val;\n            break;\n          default:\n          //do nothing\n        }\n      }\n    });\n\n    var abilities: any[] = [];\n    var buffs: any[] = [];\n    //todo - get Powers to give you the appropriate abilities and buffs\n    this.state.powerData.forEach(power => {\n      if (sp[power[\"Power\"]] &&\n        sp[power[\"Power\"]] > 0 &&\n        parsedArch) {\n        var rank = 0;\n        switch (sp[power[\"Power\"]]) {\n          case 1:\n            rank = parsedArch.lesserRank;\n            break;\n          case 2:\n            rank = parsedArch.minorRank;\n            break;\n          case 3:\n            rank = parsedArch.majorRank;\n            break;\n          default:\n            //do nothing\n            break;\n        }\n        if (power[\"Row\"] === \"Ability\") {\n          var ability = {\n            \"name\": power[\"Power\"],\n            \"action\": power[\"Action\"],\n            \"dmg\": power[\"r\" + rank],\n            \"atk\": \"1d20\",\n            \"effect\": power[\"Effect\"],\n            \"detail\": power[\"Detail\"],\n            \"tags\": power[\"Tags\"].split(\" \"),\n            \"condition\": power[\"Condition\"]\n          };\n\n          abilities.push(ability);\n        } else if (power[\"row\"] === \"Buff\") {\n          //todo\n        }\n      }\n    });\n\n    //todo - apply buffs\n\n    this.setState({\n      parsedAbilities: abilities,\n      parsedBuffs: buffs,\n      parsedArch: parsedArch\n    })\n\n\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}